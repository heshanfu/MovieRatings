apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

/*if (getGradle().getStartParameter().getTaskRequests()
        .toString().contains("Playstore")) {
    apply plugin: 'io.fabric'
}*/

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

ext.versionMajor = 0
ext.versionMinor = 3
ext.versionPatch = 2

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 27
        applicationId "com.fenchtose.flutter"
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'OMDB_API_KEY', properties['omdb_api_key']
        buildConfigField 'String', 'RATINGS_ENDPOINT', properties['ratings_endpoint']
        buildConfigField 'String', 'RATINGS_API_KEY', properties['ratings_api_key']
    }
    flavorDimensions "default"
    productFlavors {
        playstore {
            applicationId "com.fenchtose.flutter"
        }

        foss {
            applicationIdSuffix ".foss"
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".dev"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
    }
    afterEvaluate {
        android.sourceSets.all { sourceSet ->
            if (!sourceSet.name.startsWith("test"))
            {
                sourceSet.kotlin.setSrcDirs([])
            }
        }
    }
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    /*playstoreImplementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }*/
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support:recyclerview-v7:$support_lib_version"
    implementation "com.android.support:cardview-v7:$support_lib_version"
    implementation "com.android.support:design:$support_lib_version"
    implementation ('androidx.core:core-ktx:0.2', {
        exclude group: 'com.android.support'
    })
    // Android TV
    //    implementation 'com.android.support:leanback-v17:25.3.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.0.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.6.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.6.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'

    // Room
    implementation 'android.arch.persistence.room:runtime:1.1.1'
//    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0'
    kapt 'android.arch.persistence.room:compiler:1.1.1'
    implementation 'com.github.bumptech.glide:glide:4.0.0-RC0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.15.0'
    testImplementation ("com.nhaarman:mockito-kotlin-kt1.1:1.5.0", {
        exclude group: "org.jetbrains.kotlin"
    })
    testImplementation ("org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version", {
        exclude group: "org.jetbrains.kotlin", module:"kotlin-stdlib"
    })
    // For sqlite db debug
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.1'

    // stetho
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // Leak canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    playstoreImplementation 'com.android.billingclient:billing:1.0'

    lintChecks project(":lintRules")
}

repositories {
    mavenCentral()
    /*maven {
        url 'https://maven.fabric.io/public'
    }*/
}

private Integer generateVersionCode() {
    return ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    return "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
}
